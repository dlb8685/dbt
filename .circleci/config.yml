version: 2.1
jobs:
  unit:
    docker: &test_only
      - image: fishtownanalytics/test-container:9
        environment:
          DBT_INVOCATION_ENV: circle
    steps:
      - checkout
      - run: tox -- -v
  build-wheels:
    docker: *test_only
    steps:
      - checkout
      - run:
          name: Build wheels
          command: |
            python3.8 -m venv "${PYTHON_ENV}"
            export PYTHON_BIN="${PYTHON_ENV}/bin/python"
            $PYTHON_BIN -m pip install -U pip setuptools
            $PYTHON_BIN -m pip install -r requirements.txt
            $PYTHON_BIN -m pip install -r dev_requirements.txt
            /bin/bash ./scripts/build-wheels.sh
            $PYTHON_BIN ./scripts/collect-dbt-contexts.py > ./dist/context_metadata.json
            $PYTHON_BIN ./scripts/collect-artifact-schema.py > ./dist/artifact_schemas.json
          environment:
            PYTHON_ENV: /home/tox/build_venv/
      - store_artifacts:
          path: ./dist
          destination: dist
  integration-postgres:
    docker: &test_and_postgres
      - image: fishtownanalytics/test-container:9
        environment:
          DBT_INVOCATION_ENV: circle
      - image: postgres
        name: database
        environment: &pgenv
          POSTGRES_USER: "root"
          POSTGRES_PASSWORD: "password"
          POSTGRES_DB: "dbt"
    steps:
      - checkout
      - run: &setupdb
          name: Setup postgres
          command: bash test/setup_db.sh
          environment:
            PGHOST: database
            PGUSER: root
            PGPASSWORD: password
            PGDATABASE: postgres
      - run:
          name: Postgres integration tests
          command: tox -p -e py36-postgres,py37-postgres,py38-postgres,py39-postgres -- -v -n4
      - store_artifacts:
          path: ./logs
  integration-snowflake:
    docker: *test_only
    steps:
      - checkout
      - run:
          name: Snowflake integration tests
          command: tox -p -e py36-snowflake,py37-snowflake,py38-snowflake -- -v -n4
          no_output_timeout: 1h
      - store_artifacts:
          path: ./logs
  integration-redshift:
    docker: *test_only
    steps:
      - checkout
      - run:
          name: Redshift integration tests
          command: tox -p -e py36-redshift,py37-redshift,py38-redshift,py39-redshift -- -v -n4
      - store_artifacts:
          path: ./logs
  integration-bigquery:
    docker: *test_only
    steps:
      - checkout
      - run:
          name: Bigquery integration test
          command: tox -p -e py36-bigquery,py37-bigquery,py38-bigquery,py39-bigquery -- -v -n4
      - store_artifacts:
          path: ./logs

workflows:
  version: 2
  test-everything:
    jobs:
      - unit
      - integration-postgres:
          requires:
            - unit
      - integration-redshift:
          requires:
            - integration-postgres
      - integration-bigquery:
          requires:
            - integration-postgres
      - integration-snowflake:
          requires:
            - integration-postgres
      - build-wheels:
          requires:
            - unit
            - integration-postgres
            - integration-redshift
            - integration-bigquery
            - integration-snowflake
